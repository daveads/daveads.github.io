<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Daveads - threads</title>
    <subtitle>Dive into the abyss of Daveads!</subtitle>
    <link rel="self" type="application/atom+xml" href="https://daveads.github.io/notet/threads/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://daveads.github.io"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2022-06-29T00:00:00+00:00</updated>
    <id>https://daveads.github.io/notet/threads/atom.xml</id>
    <entry xml:lang="en">
        <title>Concurrency vs Multi-threading vs Asynchronous Programming</title>
        <published>2022-06-29T00:00:00+00:00</published>
        <updated>2022-06-29T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://daveads.github.io/note/concurrency-vs-multi-threading-vs-asynchronous-programming/"/>
        <id>https://daveads.github.io/note/concurrency-vs-multi-threading-vs-asynchronous-programming/</id>
        
        <content type="html" xml:base="https://daveads.github.io/note/concurrency-vs-multi-threading-vs-asynchronous-programming/">&lt;ul&gt;
&lt;li&gt;Concurrency &amp;amp;&amp;amp; Parallelism&lt;&#x2F;li&gt;
&lt;li&gt;Threads (multi-threaded) &amp;amp;&amp;amp; Processes&lt;&#x2F;li&gt;
&lt;li&gt;Synchronous &amp;amp;&amp;amp; Asynchronous&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;concurrency-parallelism&quot;&gt;Concurrency &amp;amp;&amp;amp; Parallelism&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;Concurrency:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Imagine a task where you have to &quot;sing and eat&quot;:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Sing for a time&lt;&#x2F;li&gt;
&lt;li&gt;Eat for a time&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;This task is performed concurrently. Concurrency is executing tasks at the same time but not necessarily simultaneously.&lt;&#x2F;p&gt;
&lt;p&gt;Concurrency is handled differently in various processors. In a single core, concurrency is handled via a process called &lt;strong&gt;context-switching&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Parallelism:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Given a task of &lt;em&gt;&lt;strong&gt;cooking and speaking to a friend over the phone&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;, these two tasks can be done simultaneously.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&quot;Parallelism means performing two or more tasks simultaneously. Parallel computing in computer science refers to the process of performing multiple calculations simultaneously.&quot;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Concurrency and parallelism refer to computer architectures focused on how tasks or computations are performed:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;In a single core, concurrency happens with tasks executing over the same time period via context switching, i.e. only one task gets executed.&lt;&#x2F;li&gt;
&lt;li&gt;In a multi-core environment, concurrency can be achieved via parallelism, in which multiple tasks are executed simultaneously.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;threads-processes&quot;&gt;Threads &amp;amp; Processes&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;Threads:&lt;&#x2F;strong&gt; These are sequences of executing code that can be executed independently of one another. A program can be single-threaded or multi-threaded. It&#x27;s the smallest unit of a task that can be executed by an OS.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Processes:&lt;&#x2F;strong&gt; A program is an instance of a running program. A program can have multiple processes. A process usually starts with a single thread but down the line of execution, it can create multiple threads.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Sync and Async&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Tasks are executed one after the other, e.g. giving a task to write a letter to your mom and a letter to your friend.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Async:&lt;&#x2F;strong&gt; When one task gets executed, you could switch to a different task without waiting for the previous one to get completed.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Sync and Async are &lt;em&gt;programming models&lt;&#x2F;em&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;synchronous-and-asynchronous-in-a-single-and-multi-threaded-environment&quot;&gt;Synchronous and Asynchronous in a Single and Multi-threaded Environment&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;Synchronous:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Single-threaded: Each task gets executed one after another. Each task waits for its previous task to get executed.&lt;&#x2F;li&gt;
&lt;li&gt;Multi-threaded: Tasks get executed in different threads but wait for any other executing tasks on any other thread.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Asynchronous:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Single-threaded: Tasks start executing without waiting for a different task to finish. At a given time, a single task gets executed.&lt;&#x2F;li&gt;
&lt;li&gt;Multi-threaded: Tasks get executed in different threads without waiting for any tasks and independently finish off their executions.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Concurrency and Parallelism:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The way tasks are executed.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Synchronous and Asynchronous -&amp;gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Programming models.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Single-threaded and Multi-threaded -&amp;gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The environment of task execution.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Async helps to achieve concurrency. Async in a multithread environment is a way to achieve parallelism.&lt;&#x2F;p&gt;
&lt;p&gt;Synchronously: This is how we code normally:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&quot;You wait for an operation to finish before going to the next or moving over to the other one.&quot;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;ul&gt;
&lt;li&gt;Concurrency: Threading, async I&#x2F;O&lt;&#x2F;li&gt;
&lt;li&gt;Parallelism: Multiprocessing&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Links:
&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;swift-india&#x2F;concurrency-parallelism-threads-processes-async-and-sync-related-39fd951bc61d&quot;&gt;Medium Article&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
